# user  nginx;
# worker_processes auto;

# events { worker_connections 1024; }

# http {
#   include       /etc/nginx/mime.types;
#   default_type  application/octet-stream;
#   sendfile      on;
#   keepalive_timeout 65;

#   # Upstreams от docker-сервисов в сети proxy_net
#   upstream proj1_api   { server proj1-web:8000; }
#   upstream proj1_front { server proj1-front:80; }

#   upstream proj2_api   { server proj2-web:8000; }
#   upstream proj2_front { server proj2-front:80; }

#   # -------- Проект 1: по IP ----------
#   server {
#     listen 80 default_server;
#     server_name 5.101.1.198;
#     client_max_body_size 64M;

#     # API / admin -> backend proj1
#     location ~ ^/(api/|admin/) {
#       proxy_pass http://proj1_api;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }

#     # Остальное -> фронт proj1
#     location / {
#       proxy_pass http://proj1_front;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }
#   }

#   # -------- Проект 2: по домену ----------
#   server {
#     listen 80;
#     server_name tehnodel.kg www.tehnodel.kg;  # без http://
#     client_max_body_size 64M;

#     # (Вариант A — отдаём бэкендовую статику с reverse-nginx)
#     # Убедись, что каталоги смонтированы в контейнер (см. шаг 2)
#     location /static/ { alias /static/proj2/;  access_log off; expires 30d; }
#     location /media/  { alias /media/proj2/;   access_log off; expires 30d; }

#     # Если у тебя STATIC_URL = /back_static/, дублируем маппинг (без повторного /static/)
#     location /back_static/ {
#       alias /static/proj2/;
#       access_log off;
#       expires 30d;
#     }

#     # Нормализация случайного слеша у статических файлов
#     location ~ ^/(static|back_static)/(.+\.(?:css|js|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map))/$ {
#       return 301 /$1/$2;
#     }

#     # API / admin -> backend proj2
#     location ~ ^/(api/|admin/) {
#       proxy_pass http://proj2_api;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }

#     # Остальное -> фронт proj2
#     location / {
#       proxy_pass http://proj2_front;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }
#   }
# }

# user  nginx;
# worker_processes auto;

# events { worker_connections 1024; }

# http {
#   include       /etc/nginx/mime.types;
#   default_type  application/octet-stream;
#   sendfile      on;
#   keepalive_timeout 65;

#   # Upstream'ы из сети proxy_net
#   upstream proj1_api   { server proj1-web:8000; }
#   upstream proj1_front { server proj1-front:80; }
#   upstream proj2_api   { server proj2-web:8000; }
#   upstream proj2_front { server proj2-front:80; }

#   # -------- Проект 1: по IP ----------
#   server {
#     listen 80 default_server;
#     server_name 5.101.1.198;
#     client_max_body_size 64M;

#     # MEDIA proj1 (alias на общий том)
#     location /back_media/ {
#       alias /media/proj1/;
#       access_log off;
#       expires 30d;
#       add_header Cache-Control "public";
#       try_files $uri =404;
#     }

#     # (опционально, если есть нужда раздавать бекенд-статику с реверс‑nginx)
#     location /back_static/ {
#       alias /static/proj1/;
#       access_log off;
#       expires 30d;
#       add_header Cache-Control "public";
#       try_files $uri =404;
#     }

#     # Нормализация случайного слеша у статических расширений
#     location ~ ^/(back_static|back_media)/(.+\.(?:css|js|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map))/$ {
#       return 301 /$1/$2;
#     }

#     # API / admin -> backend proj1
#     location ~ ^/(api/|admin/) {
#       proxy_pass http://proj1_api;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }

#     # Остальное -> фронт proj1
#     location / {
#       proxy_pass http://proj1_front;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }
#   }

#   # -------- Проект 2: по домену ----------
#   server {
#     listen 80;
#     server_name tehnodel.kg www.tehnodel.kg;  # без http://
#     client_max_body_size 64M;

#     # MEDIA proj2 (alias на общий том)
#     location /back_media/ {
#       alias /media/proj2/;
#       access_log off;
#       expires 30d;
#       add_header Cache-Control "public";
#       try_files $uri =404;
#     }

#     # (опционально) бекенд-статика proj2, если нужна
#     location /back_static/ {
#       alias /static/proj2/;
#       access_log off;
#       expires 30d;
#       add_header Cache-Control "public";
#       try_files $uri =404;
#     }

#     # Нормализация случайного слеша у статических расширений
#     location ~ ^/(back_static|back_media)/(.+\.(?:css|js|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map))/$ {
#       return 301 /$1/$2;
#     }

#     # API / admin -> backend proj2
#     location ~ ^/(api/|admin/) {
#       proxy_pass http://proj2_api;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }

#     # Остальное -> фронт proj2
#     location / {
#       proxy_pass http://proj2_front;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_redirect off;
#     }
#   }
# }
user  nginx;
worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;

  # >>> ADDED: простой рейт-лимит по IP (5 req/сек, буфер 20)
  limit_req_zone $binary_remote_addr zone=bot:10m rate=5r/s;

  # >>> ADDED: базовая фильтрация по User-Agent (пример с libredtail-http)
  map $http_user_agent $bad_ua {
    default 0;
    ~*libredtail-http 1;
  }

  # Upstream'ы из сети proxy_net
  upstream proj1_api   { server proj1-web:8000; }
  upstream proj1_front { server proj1-front:80; }
  upstream proj2_api   { server proj2-web:8000; }
  upstream proj2_front { server proj2-front:80; }

  # -------- Проект 1: по IP ----------
  server {
    listen 80 default_server;
    server_name 5.101.1.198;
    client_max_body_size 64M;

    # >>> ADDED: блочим любые попытки дернуть PHP-файлы
    location ~* \.(php|phar|phtml)$ { return 444; }

    # >>> ADDED: типовые скан-пути (phpunit/laravel/yii/vendor/tests/…)
    location ~* ^/(vendor|tests?|backup|public|lib|app|cms|blog|workspace|yii|zend|laravel|phpunit)(/|$) {
      return 444;
    }

    # >>> ADDED: отсекаем UA из map (если совпало — 403)
    if ($bad_ua) { return 403; }

    # MEDIA proj1 (alias на общий том)
    location /back_media/ {
      alias /media/proj1/;
      access_log off;
      expires 30d;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # (опционально, если есть нужда раздавать бекенд-статику с реверс-nginx)
    location /back_static/ {
      alias /static/proj1/;
      access_log off;
      expires 30d;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # Нормализация случайного слеша у статических расширений
    location ~ ^/(back_static|back_media)/(.+\.(?:css|js|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map))/$ {
      return 301 /$1/$2;
    }

    # API / admin -> backend proj1
    location ~ ^/(api/|admin/) {
      proxy_pass http://proj1_api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;

      # >>> ADDED: на API тоже можно слегка лимитировать (при желании убери)
      limit_req zone=bot burst=20 nodelay;
    }

    # Остальное -> фронт proj1
    location / {
      proxy_pass http://proj1_front;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;

      # >>> ADDED: рейт-лимит для шума по SPA
      limit_req zone=bot burst=20 nodelay;
    }
  }

  # -------- Проект 2: по домену ----------
  server {
    listen 80;
    server_name tehnodel.kg www.tehnodel.kg;  # без http://
    client_max_body_size 64M;

    # >>> ADDED: блочим любые попытки дернуть PHP-файлы
    location ~* \.(php|phar|phtml)$ { return 444; }

    # >>> ADDED: типовые скан-пути
    location ~* ^/(vendor|tests?|backup|public|lib|app|cms|blog|workspace|yii|zend|laravel|phpunit)(/|$) {
      return 444;
    }

    # >>> ADDED: блок по плохим UA
    if ($bad_ua) { return 403; }

    # MEDIA proj2 (alias на общий том)
    location /back_media/ {
      alias /media/proj2/;
      access_log off;
      expires 30d;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # (опционально) бекенд-статика proj2, если нужна
    location /back_static/ {
      alias /static/proj2/;
      access_log off;
      expires 30d;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # Нормализация случайного слеша у статических расширений
    location ~ ^/(back_static|back_media)/(.+\.(?:css|js|png|jpe?g|svg|gif|webp|ico|woff2?|ttf|map))/$ {
      return 301 /$1/$2;
    }

    # API / admin -> backend proj2
    location ~ ^/(api/|admin/) {
      proxy_pass http://proj2_api;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;

      # >>> ADDED: рейт-лимит
      limit_req zone=bot burst=20 nodelay;
    }

    # Остальное -> фронт proj2
    location / {
      proxy_pass http://proj2_front;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;

      # >>> ADDED: рейт-лимит
      limit_req zone=bot burst=20 nodelay;
    }
  }
}
